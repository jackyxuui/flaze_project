{"version":3,"sources":["displayCustomerData.js","getCustomerCredits.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayCustomerData","useState","customerData","setCustomerData","btnText","setBtnText","showTransactions","setShowTransactions","onClick","transaction","className","border","map","info","firstname","lastname","transactionDate","transactionAmount","GetCustomerCredits","showCreditReport","setShowCreditReport","customersArr","checkDateInRange","start","end","dateToCheck","startDate","Date","endDate","checkDate","getCreditFromMoney","moneySpend","getAprilCredit","transactionAmountSum","item","Math","round","getMayCredit","getJuneCredit","getTotalCredit","customer","aprilCredit","mayCredit","juneCredit","totalCredit","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eceaa2c.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n// import {useEffect} from 'react';\n\nimport transaction from './transaction.json'\n\nexport default function DisplayCustomerData(){\n    const [customerData, setCustomerData] = useState([]);\n    // setCustomerData(transaction);\n    const [btnText, setBtnText] = useState(\"Show Customer Transaction History\");\n    const [showTransactions, setShowTransactions] = useState(false);\n    // useEffect(()=>{\n    //     setCustomerData(transaction);\n    // },[]);\n    const buttonHandler = () =>{\n        if(btnText === \"Show Customer Transaction History\"){\n            setBtnText(\"Hide Customer Transaction History\");\n            setShowTransactions(true);\n        }\n        else{\n            setBtnText(\"Show Customer Transaction History\");\n            setShowTransactions(false);\n        }\n    };\n    // console.log(customerData);\n    return(\n        <div>\n            <button onClick={() => {setCustomerData(transaction);buttonHandler();}}>{btnText}</button>\n            {showTransactions ? <table className=\"transactionRecord\" border=\"1\">\n                <tr>\n                    <th>Name</th>\n                    <th>Transaction Date</th>\n                    <th>Transaction Amount</th>\n                </tr>\n\n                {customerData.map(info =>{\n                    return (\n                        <tr>\n                            <th>{info.firstname} {info.lastname}</th>\n                            <th>{info.transactionDate}</th>\n                            <th>{info.transactionAmount}</th>\n                        </tr>\n                    )\n                })}\n\n            </table> :null}\n        </div>\n    )\n}\n\n\n\n\n","import './App.css';\nimport React, {useState} from 'react';\nimport transaction from './transaction.json';\n\n\nexport default function GetCustomerCredits() {\n    const [btnText, setBtnText] = useState(\"Show Customer Credits Report\");\n    const [showCreditReport, setShowCreditReport] = useState(false);\n    const customersArr = [];\n    const checkDateInRange = (start,end,dateToCheck)=>{\n        const startDate = new Date(start);\n        const endDate = new Date(end);\n        const checkDate = new Date(dateToCheck);\n        if(checkDate>= startDate && checkDate <= endDate){\n            return true;\n        }\n        else{\n            return false;\n        }\n    };\n    const getCreditFromMoney = (moneySpend)=>{\n        if(moneySpend < 0){\n            return null;\n        }\n        if(moneySpend <= 50){\n            return 0;\n        }\n        else if(moneySpend>50 && moneySpend <=100){\n            return moneySpend-50;\n        }\n        else{\n            return 2*(moneySpend-100) + 50;\n        }\n    }\n\n    const getAprilCredit = (firstname)=>{\n        let transactionAmountSum = 0;\n        for(let item of transaction){\n            if(checkDateInRange(\"2021-04-01\",\"2021-04-30\", item.transactionDate)\n            && firstname === item.firstname){\n                transactionAmountSum += Math.round(item.transactionAmount);\n            }\n        }\n        return getCreditFromMoney(transactionAmountSum);\n    };\n    const getMayCredit = (firstname)=>{\n        let transactionAmountSum = 0;\n        for(let item of transaction){\n            if(checkDateInRange(\"2021-05-01\",\"2021-05-31\", item.transactionDate)&&\n             firstname === item.firstname){\n                transactionAmountSum += Math.round(item.transactionAmount);\n            }\n        }\n        return getCreditFromMoney(transactionAmountSum);\n    };\n    const getJuneCredit = (firstname)=>{\n        let transactionAmountSum = 0;\n        for(let item of transaction){\n            if(checkDateInRange(\"2021-06-01\",\"2021-06-30\", item.transactionDate)&&\n            firstname === item.firstname){\n                transactionAmountSum += Math.round(item.transactionAmount);\n            }\n        }\n        return getCreditFromMoney(transactionAmountSum);\n    };\n    const getTotalCredit = (firstname)=>{\n        let transactionAmountSum = 0;\n        for(let item of transaction){\n            if(firstname === item.firstname){\n                transactionAmountSum += Math.round(item.transactionAmount);\n            }\n        }\n        return getCreditFromMoney(transactionAmountSum);\n    }\n\n    for (let item of transaction) {\n        const customer = {};\n        customer.firstname = item.firstname;\n        customer.lastname = item.lastname;\n        customer.aprilCredit = getAprilCredit(item.firstname);\n        customer.mayCredit = getMayCredit(item.firstname);\n        customer.juneCredit = getJuneCredit(item.firstname);\n        customer.totalCredit = getTotalCredit(item.firstname);\n        // console.log(customer);\n        customersArr.push(customer);\n    }\n    const buttonHandler = ()=>{\n        if(btnText === \"Show Customer Credits Report\"){\n            setBtnText(\"Hide Customer Credits Report\");\n            setShowCreditReport(true);\n        }\n        else{\n            setBtnText(\"Show Customer Credits Report\");\n            setShowCreditReport(false);\n        }\n    };\n\n    return(\n        <div>\n            <button onClick={() => buttonHandler()}>{btnText}</button>\n            {showCreditReport ? <table border=\"1\">\n                <tr>\n                    <th>Name</th>\n                    <th>April Credits</th>\n                    <th>May Credits</th>\n                    <th>June Credits</th>\n                    <th>Total Credits</th>\n                </tr>\n                {customersArr.map(info =>{\n                    return (\n                        <tr>\n                            <th>{info.firstname} {info.lastname}</th>\n                            <th>{info.aprilCredit}</th>\n                            <th>{info.mayCredit}</th>\n                            <th>{info.juneCredit}</th>\n                            <th>{info.totalCredit}</th>\n                        </tr>\n                    )\n                })}\n            </table>: null}\n        </div>\n    )\n}\n","import './App.css';\nimport React from 'react';\nimport DisplayCustomerData from \"./displayCustomerData\";\nimport GetCustomerCredits from \"./getCustomerCredits\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n        <h1>Welcome to reward program</h1>\n        <DisplayCustomerData/>\n        <GetCustomerCredits/>\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}